// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package videoserver

import (
	"context"

	"zero/video/rpc/video"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = video.Request
	Response = video.Response

	VideoServer interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultVideoServer struct {
		cli zrpc.Client
	}
)

func NewVideoServer(cli zrpc.Client) VideoServer {
	return &defaultVideoServer{
		cli: cli,
	}
}

func (m *defaultVideoServer) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := video.NewVideoServerClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
