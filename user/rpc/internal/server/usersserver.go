// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"zero/user/rpc/internal/logic"
	"zero/user/rpc/internal/svc"
	"zero/user/rpc/user"
)

type UsersServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUsersServer
}

func NewUsersServer(svcCtx *svc.ServiceContext) *UsersServer {
	return &UsersServer{
		svcCtx: svcCtx,
	}
}

// 用户登录
func (s *UsersServer) Login(ctx context.Context, in *user.LoginRes) (*user.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

// 用户注册
func (s *UsersServer) Register(ctx context.Context, in *user.RegisterReq) (*user.RegisterResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

// 用户信息
func (s *UsersServer) GetUserInfo(ctx context.Context, in *user.UserInfoReq) (*user.UserInfoResp, error) {
	l := logic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

// 退出登录
func (s *UsersServer) Logout(ctx context.Context, in *user.LogoutReq) (*user.Response, error) {
	l := logic.NewLogoutLogic(ctx, s.svcCtx)
	return l.Logout(in)
}
